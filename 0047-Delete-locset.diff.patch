From 6cdf3a6df661c3b9c7edea48e4e59f599a8de48b Mon Sep 17 00:00:00 2001
From: ValeraSh <9144287@gmail.com>
Date: Mon, 16 Dec 2013 19:02:11 +0300
Subject: [PATCH 47/56] Delete locset.diff

---
 locset.diff | 161 ------------------------------------------------------------
 1 file changed, 161 deletions(-)
 delete mode 100644 locset.diff

diff --git a/locset.diff b/locset.diff
deleted file mode 100644
index 23d2cfb..0000000
--- a/locset.diff
+++ /dev/null
@@ -1,161 +0,0 @@
-diff --git "a/D:\\Temp\\TortoiseGit\\LocFFA7.tmp\\LocationSettings-a306630-left.java" "b/D:\\Temp\\TortoiseGit\\LocFFA6.tmp\\LocationSettings-4528e68-right.java"
-index 06a6650..c3a2495 100644
---- "a/D:\\Temp\\TortoiseGit\\LocFFA7.tmp\\LocationSettings-a306630-left.java"
-+++ "b/D:\\Temp\\TortoiseGit\\LocFFA6.tmp\\LocationSettings-4528e68-right.java"
-@@ -18,17 +18,24 @@ package com.android.settings.location;
- 
- import android.app.ActionBar;
- import android.app.Activity;
-+import android.app.AlarmManager;
-+import android.app.PendingIntent;
- import android.content.BroadcastReceiver;
- import android.content.Context;
- import android.content.Intent;
- import android.content.IntentFilter;
-+import android.content.SharedPreferences;
-+import android.content.pm.PackageManager;
- import android.location.LocationManager;
- import android.location.SettingInjectorService;
- import android.os.Bundle;
-+import android.preference.CheckBoxPreference;
- import android.preference.Preference;
-+import android.preference.Preference.OnPreferenceChangeListener;
- import android.preference.PreferenceActivity;
- import android.preference.PreferenceCategory;
- import android.preference.PreferenceGroup;
-+import android.preference.PreferenceManager;
- import android.preference.PreferenceScreen;
- import android.provider.Settings;
- import android.util.Log;
-@@ -37,6 +44,9 @@ import android.widget.CompoundButton;
- import android.widget.Switch;
- 
- import com.android.settings.R;
-+import com.android.settings.cyanogenmod.LtoService;
-+
-+import org.cyanogenmod.hardware.LongTermOrbits;
- 
- import java.util.Collections;
- import java.util.Comparator;
-@@ -46,12 +56,14 @@ import java.util.List;
-  * Location access settings.
-  */
- public class LocationSettings extends LocationSettingsBase
--        implements CompoundButton.OnCheckedChangeListener {
-+        implements CompoundButton.OnCheckedChangeListener, OnPreferenceChangeListener {
- 
-     private static final String TAG = "LocationSettings";
- 
-     /** Key for preference screen "Mode" */
-     private static final String KEY_LOCATION_MODE = "location_mode";
-+    /** Key for preference screen "LTO - WiFi Only" */
-+    public static final String KEY_GPS_DOWNLOAD_DATA_WIFI_ONLY = "gps_download_data_wifi_only";
-     /** Key for preference category "Recent location requests" */
-     private static final String KEY_RECENT_LOCATION_REQUESTS = "recent_location_requests";
-     /** Key for preference category "Location services" */
-@@ -60,6 +72,7 @@ public class LocationSettings extends LocationSettingsBase
-     private Switch mSwitch;
-     private boolean mValidListener;
-     private Preference mLocationMode;
-+    private CheckBoxPreference mGpsDownloadDataWifiOnly;
-     private PreferenceCategory mCategoryRecentLocationRequests;
-     /** Receives UPDATE_INTENT  */
-     private BroadcastReceiver mReceiver;
-@@ -124,6 +137,17 @@ public class LocationSettings extends LocationSettingsBase
-                     }
-                 });
- 
-+        mGpsDownloadDataWifiOnly =
-+                (CheckBoxPreference) root.findPreference(KEY_GPS_DOWNLOAD_DATA_WIFI_ONLY);
-+        if (mGpsDownloadDataWifiOnly != null) {
-+            if (!LongTermOrbits.isSupported() || !checkGpsDownloadWiFiOnly(getActivity())) {
-+                root.removePreference(mGpsDownloadDataWifiOnly);
-+                mGpsDownloadDataWifiOnly = null;
-+            } else {
-+                mGpsDownloadDataWifiOnly.setOnPreferenceChangeListener(this);
-+            }
-+        }
-+
-         mCategoryRecentLocationRequests =
-                 (PreferenceCategory) root.findPreference(KEY_RECENT_LOCATION_REQUESTS);
-         RecentLocationApps recentApps = new RecentLocationApps(activity);
-@@ -184,6 +208,7 @@ public class LocationSettings extends LocationSettingsBase
-                     Log.d(TAG, "Received settings change intent: " + intent);
-                 }
-                 injector.reloadStatusMessages();
-+                refreshLocationMode();
-             }
-         };
- 
-@@ -229,6 +254,9 @@ public class LocationSettings extends LocationSettingsBase
-         // be disabled but checked.
-         boolean enabled = (mode != Settings.Secure.LOCATION_MODE_OFF);
-         mSwitch.setEnabled(!restricted);
-+        if (mGpsDownloadDataWifiOnly != null) {
-+            mGpsDownloadDataWifiOnly.setEnabled(enabled && !restricted);
-+        }
-         mLocationMode.setEnabled(enabled && !restricted);
-         mCategoryRecentLocationRequests.setEnabled(enabled);
- 
-@@ -255,4 +283,61 @@ public class LocationSettings extends LocationSettingsBase
-             setLocationMode(Settings.Secure.LOCATION_MODE_OFF);
-         }
-     }
-+
-+    @Override
-+    public boolean onPreferenceChange(Preference preference, Object newValue) {
-+        if (mGpsDownloadDataWifiOnly != null && preference.equals(mGpsDownloadDataWifiOnly)) {
-+            updateLtoServiceStatus(getActivity(), isLocationModeEnabled(getActivity()));
-+        }
-+        return true;
-+    }
-+
-+    private static void updateLtoServiceStatus(Context context, boolean start) {
-+        Intent intent = new Intent(context, LtoService.class);
-+        if (start) {
-+            context.startService(intent);
-+        } else {
-+            context.stopService(intent);
-+        }
-+    }
-+
-+    private static boolean checkGpsDownloadWiFiOnly(Context context) {
-+        PackageManager pm = context.getPackageManager();
-+        boolean supportsTelephony = pm.hasSystemFeature(PackageManager.FEATURE_TELEPHONY);
-+        boolean supportsWifi = pm.hasSystemFeature(PackageManager.FEATURE_WIFI);
-+        if (!supportsWifi || !supportsTelephony) {
-+            SharedPreferences.Editor editor =
-+                    PreferenceManager.getDefaultSharedPreferences(context).edit();
-+            editor.putBoolean(KEY_GPS_DOWNLOAD_DATA_WIFI_ONLY, supportsWifi);
-+            editor.apply();
-+            return false;
-+        }
-+        return true;
-+    }
-+
-+    public static boolean isLocationModeEnabled(Context context) {
-+        int mode = Settings.Secure.getInt(context.getContentResolver(),
-+                Settings.Secure.LOCATION_MODE, Settings.Secure.LOCATION_MODE_OFF);
-+        return (mode != Settings.Secure.LOCATION_MODE_OFF);
-+    }
-+
-+    /**
-+     * Restore the properties associated with this preference on boot
-+     * @param ctx A valid context
-+     */
-+    public static void restore(final Context context) {
-+        if (LongTermOrbits.isSupported() && isLocationModeEnabled(context)) {
-+            // Check and adjust the value for Gps download data on wifi only
-+            checkGpsDownloadWiFiOnly(context);
-+
-+            // Starts the LtoService, but delayed 2 minutes after boot (this should give a
-+            // proper time to start all device services)
-+            AlarmManager am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-+            Intent intent = new Intent(context, LtoService.class);
-+            PendingIntent pi = PendingIntent.getService(context, 0, intent,
-+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_ONE_SHOT);
-+            long nextLtoDownload = System.currentTimeMillis() + (1000 * 60 * 2L);
-+            am.set(AlarmManager.RTC, nextLtoDownload, pi);
-+        }
-+    }
- }
-- 
1.8.4.msysgit.0

