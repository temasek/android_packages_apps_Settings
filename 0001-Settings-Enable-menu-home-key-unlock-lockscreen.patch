From 7a8e16836a2ab1f9b3e67874953a7ee6a54622d5 Mon Sep 17 00:00:00 2001
From: Janson Kang <temasek71@gmail.com>
Date: Fri, 29 Nov 2013 01:30:37 +0800
Subject: [PATCH 01/56] Settings: Enable menu/home key unlock lockscreen

This is a temporary commit till actual commit comes up
---
 res/values/cm_strings.xml                      |  6 ++++++
 res/xml/security_settings_lockscreen.xml       | 10 ++++++++++
 src/com/android/settings/SecuritySettings.java | 26 ++++++++++++++++++++++++++
 3 files changed, 42 insertions(+)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 790168a..11d9956 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -690,4 +690,10 @@ equiring confirmation</string>
     <string name="power_notifications_ringtone_title">Notification sound</string>
     <!-- Sound settings, charging sounds label for ringtone == none -->
     <string name="power_notifications_ringtone_silent">Silent</string>
+
+    <!-- Screen security - Screen security   -->
+    <string name="unlock_menu_unlock_title">Menu unlock</string>
+    <string name="unlock_menu_unlock_summary">Pressing the menu button unlocks the device</string>
+    <string name="unlock_home_unlock_title">Home unlock</string>
+    <string name="unlock_home_unlock_summary">Pressing the home button unlocks the device</string>
 </resources>
diff --git a/res/xml/security_settings_lockscreen.xml b/res/xml/security_settings_lockscreen.xml
index bb95463..498b9f8 100644
--- a/res/xml/security_settings_lockscreen.xml
+++ b/res/xml/security_settings_lockscreen.xml
@@ -26,6 +26,16 @@
             android:summary="@string/unlock_set_unlock_mode_off"
             android:persistent="false"/>
 
+        <CheckBoxPreference
+            android:key="menu_unlock"
+            android:title="@string/unlock_menu_unlock_title"
+            android:summary="@string/unlock_menu_unlock_summary" />
+
+        <CheckBoxPreference
+            android:key="home_unlock"
+            android:title="@string/unlock_home_unlock_title"
+            android:summary="@string/unlock_home_unlock_summary" />
+
         <PreferenceScreen
             android:fragment="com.android.settings.OwnerInfoSettings"
             android:key="owner_info_settings"
diff --git a/src/com/android/settings/SecuritySettings.java b/src/com/android/settings/SecuritySettings.java
index 118d1d3..1be17af 100644
--- a/src/com/android/settings/SecuritySettings.java
+++ b/src/com/android/settings/SecuritySettings.java
@@ -94,6 +94,8 @@ public class SecuritySettings extends RestrictedSettingsFragment
     private static final String KEY_APP_SECURITY_CATEGORY = "app_security";
     private static final String KEY_BLACKLIST = "blacklist";
     private static final String KEY_SMS_SECURITY_CHECK_PREF = "sms_security_check_limit";
+    private static final String MENU_UNLOCK_SCREEN = "menu_unlock_screen";
+    private static final String HOME_UNLOCK_SCREEN = "home_unlock_screen";
 
     // Omni Additions
     private static final String LOCKSCREEN_QUICK_UNLOCK_CONTROL = "lockscreen_quick_unlock_control";
@@ -125,6 +127,8 @@ public class SecuritySettings extends RestrictedSettingsFragment
     // CyanogenMod Additions
     private PreferenceScreen mBlacklist;
     private ListPreference mSmsSecurityCheck;
+    private CheckBoxPreference mMenuUnlock;
+    private CheckBoxPreference mHomeUnlock;
 
     public SecuritySettings() {
         super(null /* Don't ask for restrictions pin on creation. */);
@@ -284,6 +288,22 @@ public class SecuritySettings extends RestrictedSettingsFragment
             mQuickUnlockScreen.setOnPreferenceChangeListener(this);
         }
 
+        // Menu Unlock
+        mMenuUnlock = (CheckBoxPreference) root.findPreference(MENU_UNLOCK_SCREEN);
+        if (mMenuUnlock  != null) {
+            mMenuUnlock.setChecked(Settings.System.getInt(getContentResolver(),
+                    Settings.System.MENU_UNLOCK_SCREEN, 0) == 1);
+            mMenuUnlock.setOnPreferenceChangeListener(this);
+        }
+
+        // Home Unlock
+        mHomeUnlock = (CheckBoxPreference) root.findPreference(HOME_UNLOCK_SCREEN);
+        if (mHomeUnlock  != null) {
+            mHomeUnlock.setChecked(Settings.System.getInt(getContentResolver(),
+                    Settings.System.HOME_UNLOCK_SCREEN, 0) == 1);
+            mHomeUnlock.setOnPreferenceChangeListener(this);
+        }
+
         // Show password
         mShowPassword = (CheckBoxPreference) root.findPreference(KEY_SHOW_PASSWORD);
         mResetCredentials = root.findPreference(KEY_RESET_CREDENTIALS);
@@ -598,6 +618,12 @@ public class SecuritySettings extends RestrictedSettingsFragment
         } else if (preference == mQuickUnlockScreen) {
             Settings.System.putInt(getActivity().getApplicationContext().getContentResolver(),
                     Settings.System.LOCKSCREEN_QUICK_UNLOCK_CONTROL, isToggled(preference) ? 1 : 0);
+        } else if (preference == mMenuUnlock) {
+            Settings.System.putInt(getActivity().getApplicationContext().getContentResolver(),
+                    Settings.System.MENU_UNLOCK_SCREEN, isToggled(preference) ? 1 : 0);
+        } else if (preference == mHomeUnlock) {
+            Settings.System.putInt(getActivity().getApplicationContext().getContentResolver(),
+                    Settings.System.HOME_UNLOCK_SCREEN, isToggled(preference) ? 1 : 0);
         } else if (preference == mShowPassword) {
             Settings.System.putInt(getContentResolver(), Settings.System.TEXT_SHOW_PASSWORD,
                     mShowPassword.isChecked() ? 1 : 0);
-- 
1.8.4.msysgit.0

